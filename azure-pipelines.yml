### YamlMime:Yaml
ms.openlocfilehash: a933be77d19a2017cd5d5a40835bb52a77ed0968
ms.sourcegitcommit: 82f364d63269c277208cf43051f26cc26a25f1a4
ms.translationtype: HT
ms.contentlocale: ja-JP
ms.lasthandoff: 06/09/2021
ms.locfileid: "111862569"
trigger:
- '*'
variables:
  buildConfiguration: Release
  releaseBranchName: release
stages:
- stage: Build
  displayName: Build the web application
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: ubuntu-18.04
      demands:
      - npm
    variables:
      wwwrootDir: Tailspin.SpaceGame.Web/wwwroot
      dotnetSdkVersion: 3.1.300
    steps:
    - task: UseDotNet@2
      displayName: Use .NET SDK $(dotnetSdkVersion)
      inputs:
        version: $(dotnetSdkVersion)
    - task: Npm@1
      displayName: Run npm install
      inputs:
        verbose: false
    - script: ./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)
      displayName: Compile Sass assets
    - task: gulp@1
      displayName: Run gulp tasks
    - script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
      displayName: Write build info
      workingDirectory: $(wwwrootDir)
    - task: DotNetCoreCLI@2
      displayName: Restore project dependencies
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build the project - $(buildConfiguration)
      inputs:
        command: build
        arguments: --no-restore --configuration $(buildConfiguration)
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Publish the project - $(buildConfiguration)
      inputs:
        command: publish
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)
        zipAfterPublish: true
    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop
- stage: Dev
  displayName: Deploy to the dev environment
  dependsOn: Build
  condition: >
    and

    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - deployment: Deploy
    pool:
      vmImage: ubuntu-18.04
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: Resource Manager - Tailspin - Space Game
              appName: $(WebAppNameDev)
              package: $(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip